openapi: 3.0.2
info:
  title: Baltic Robo API
  description: |
    API to serve **[Baltic Robo](https://balticrobo.eu)** event. It provides
     bunch of functionalities to show front page (eg. our sponsors and
     partners), opt-in for newsletter, allow to register constructors and
     robots, sign up for event, judge all battles etc.

    This API is main entrypoint for all related applications built by our team.
     Also, after contact, we are able to prepare extended functions which allows
     to create fans apps.
  version: 2.0.0
  license:
    name: MIT license
    url: https://github.com/balticrobo/website-api/blob/master/LICENSE
  contact:
    name: PaweÅ‚ Cierzniakowski
    email: pawel@cierzniakowski.pl
    url: https://cierzniak.ml
servers:
  - url: http://localhost:8000
    description: Docker or local development
paths:
  /login:
    post:
      summary: Credentials => JWT
      description: |
        Get user credentials (email and password), generate
        [JSON Web Token](https://jwt.io/) and return it. This Token must be
        added to each future request till is valid.
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  description: User email
                password:
                  type: string
                  description: User password
              required:
                - email
                - password
            example:
              email: jdoe@example.com
              password: MySecretPassword123
      responses:
        200:
          description: Cretentials are correct so take your JWT
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      token:
                        type: string
                        example:
                          "eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9\
                          .eyJzdWIiOiIiLCJuYW1lIjoiSm9obiBEb2UiLCJpYXQiOjE1MTYy\
                          MzkwMjJ9\
                          .myWq7MiF6hMmNbW8onUdrU3LCSDnz_zikV1VYYVYiLLPImV-E6g3\
                          rgsqVSxg3Xzz"
  /cms/event/create:
    post:
      summary: Create new event;
      description: |
        Create new event;
      tags:
        - cms
        - events
      requestBody:
        content:
          application/json:
            schema:
              properties:
                year:
                  type: integer
                  description: The year in which event occurs
                eventStartsAt:
                  type: string
                  description: The exact date and time of event start in format ISO8601
                registrationStartsAt:
                  type: string
                  description: The exact date and time of event's registration starts in format ISO8601
                registrationStopsAt:
                  type: string
                  description: The exact date and time of event's registration stops in format ISO8601
              required:
                - year
                - eventStartsAt
                - registrationStartsAt
                - registrationStopsAt
            example:
              year: 2019
              eventStartsAt: "2018-05-03 10:00:00"
              registrationStartsAt: "2018-02-01 09:00:00"
              registrationStopsAt: "2018-04-25 21:00:00"
      responses:
        201:
          description: Event was created
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      event:
                        properties:
                          year:
                            type: integer
                            example: 2019
                          eventStartsAt:
                            type: string
                            example: "2018-05-03 10:00:00"
                          registrationStartsAt:
                            type: string
                            example: "2018-02-01 09:00:00"
                          registrationStopsAt:
                            type: string
                            example: "2018-04-25 21:00:00"
components:
  securitySchemes:
    JWT:
      description: |
        [JSON Web Token](https://jwt.io/) have to be obtained from
         **POST** _/login_
      type: http
      scheme: bearer
      bearerFormat: JWT
